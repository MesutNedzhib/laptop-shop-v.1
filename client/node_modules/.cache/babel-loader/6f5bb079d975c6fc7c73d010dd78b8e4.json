{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ALL_FILTERS_FAIL, GET_ALL_FILTERS_REQUEST, GET_ALL_FILTERS_SUCCESS, GET_ALL_PRODUCTS_FAIL, GET_ALL_PRODUCTS_REQUEST, GET_ALL_PRODUCTS_SUCCESS, GET_PRODUCTS_BY_MULTY_FILTER_FAIL, GET_PRODUCTS_BY_MULTY_FILTER_REQUEST, GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS, GET_PRODUCT_BY_ID_FAIL, GET_PRODUCT_BY_ID_REQUEST, GET_PRODUCT_BY_ID_SUCCESS, GET_PRODUCT_BY_NAME_FAIL, GET_PRODUCT_BY_NAME_REQUEST, GET_PRODUCT_BY_NAME_SUCCESS } from \"../constants/productsConstants\";\nexport const getAllProducts = () => async (dispatch, getState) => {\n  dispatch({\n    type: GET_ALL_PRODUCTS_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/products/get-all-products\");\n    dispatch({\n      type: GET_ALL_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_PRODUCTS_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const getAllFilters = () => async dispatch => {\n  dispatch({\n    type: GET_ALL_FILTERS_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/products/get-all-filters\");\n    dispatch({\n      type: GET_ALL_FILTERS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_FILTERS_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const getProductById = _id => async dispatch => {\n  dispatch({\n    type: GET_PRODUCT_BY_ID_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/products/get-product-by-id\", {\n      _id\n    });\n    dispatch({\n      type: GET_PRODUCT_BY_ID_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCT_BY_ID_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const getProductByName = value => async dispatch => {\n  dispatch({\n    type: GET_PRODUCT_BY_NAME_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/products/get-product-by-name`, {\n      name: value\n    });\n    dispatch({\n      type: GET_PRODUCT_BY_NAME_SUCCESS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCT_BY_NAME_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const getProductsByMultyFilter = (model, sortValue) => async dispatch => {\n  dispatch({\n    type: GET_PRODUCTS_BY_MULTY_FILTER_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(`/api/products/get-products-by-multy-filter`, {\n      model\n    });\n\n    if (data && sortValue.length !== 0) {\n      dispatch({\n        type: GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS,\n        payload: sortData(sortValue, data.data)\n      });\n    }\n\n    dispatch({\n      type: GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_BY_MULTY_FILTER_FAIL,\n      payload: err.message\n    });\n  }\n};\n\nconst sortData = (sortOption, productsData) => {\n  if (sortOption === \"a-z\") {\n    return productsData.sort((a, b) => a.name > b.name ? 1 : -1);\n  }\n\n  if (sortOption === \"z-a\") {\n    return productsData.sort((a, b) => a.name < b.name ? 1 : -1);\n  }\n\n  if (sortOption === \"descending\") {\n    return productsData.sort((a, b) => a.price > b.price ? 1 : -1);\n  }\n\n  if (sortOption === \"ascending\") {\n    return productsData.sort((a, b) => a.price < b.price ? 1 : -1);\n  }\n};","map":{"version":3,"sources":["D:/laptop-shop-v.1/client/src/actions/productsActions.js"],"names":["axios","GET_ALL_FILTERS_FAIL","GET_ALL_FILTERS_REQUEST","GET_ALL_FILTERS_SUCCESS","GET_ALL_PRODUCTS_FAIL","GET_ALL_PRODUCTS_REQUEST","GET_ALL_PRODUCTS_SUCCESS","GET_PRODUCTS_BY_MULTY_FILTER_FAIL","GET_PRODUCTS_BY_MULTY_FILTER_REQUEST","GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS","GET_PRODUCT_BY_ID_FAIL","GET_PRODUCT_BY_ID_REQUEST","GET_PRODUCT_BY_ID_SUCCESS","GET_PRODUCT_BY_NAME_FAIL","GET_PRODUCT_BY_NAME_REQUEST","GET_PRODUCT_BY_NAME_SUCCESS","getAllProducts","dispatch","getState","type","data","get","payload","err","message","getAllFilters","getProductById","_id","post","getProductByName","value","name","getProductsByMultyFilter","model","sortValue","length","sortData","sortOption","productsData","sort","a","b","price"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_ALL_FILTERS_FAIL,\r\n  GET_ALL_FILTERS_REQUEST,\r\n  GET_ALL_FILTERS_SUCCESS,\r\n  GET_ALL_PRODUCTS_FAIL,\r\n  GET_ALL_PRODUCTS_REQUEST,\r\n  GET_ALL_PRODUCTS_SUCCESS,\r\n  GET_PRODUCTS_BY_MULTY_FILTER_FAIL,\r\n  GET_PRODUCTS_BY_MULTY_FILTER_REQUEST,\r\n  GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS,\r\n  GET_PRODUCT_BY_ID_FAIL,\r\n  GET_PRODUCT_BY_ID_REQUEST,\r\n  GET_PRODUCT_BY_ID_SUCCESS,\r\n  GET_PRODUCT_BY_NAME_FAIL,\r\n  GET_PRODUCT_BY_NAME_REQUEST,\r\n  GET_PRODUCT_BY_NAME_SUCCESS,\r\n} from \"../constants/productsConstants\";\r\n\r\nexport const getAllProducts = () => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: GET_ALL_PRODUCTS_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await axios.get(\"/api/products/get-all-products\");\r\n    dispatch({\r\n      type: GET_ALL_PRODUCTS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ALL_PRODUCTS_FAIL,\r\n      payload: err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllFilters = () => async (dispatch) => {\r\n  dispatch({\r\n    type: GET_ALL_FILTERS_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await axios.get(\"/api/products/get-all-filters\");\r\n    dispatch({\r\n      type: GET_ALL_FILTERS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ALL_FILTERS_FAIL,\r\n      payload: err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductById = (_id) => async (dispatch) => {\r\n  dispatch({\r\n    type: GET_PRODUCT_BY_ID_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await axios.post(\"/api/products/get-product-by-id\", {\r\n      _id,\r\n    });\r\n    dispatch({\r\n      type: GET_PRODUCT_BY_ID_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_PRODUCT_BY_ID_FAIL,\r\n      payload: err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductByName = (value) => async (dispatch) => {\r\n  dispatch({\r\n    type: GET_PRODUCT_BY_NAME_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const { data } = await axios.get(`/api/products/get-product-by-name`, {\r\n      name: value,\r\n    });\r\n    dispatch({\r\n      type: GET_PRODUCT_BY_NAME_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_PRODUCT_BY_NAME_FAIL,\r\n      payload: err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductsByMultyFilter =\r\n  (model, sortValue) => async (dispatch) => {\r\n    dispatch({\r\n      type: GET_PRODUCTS_BY_MULTY_FILTER_REQUEST,\r\n    });\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/products/get-products-by-multy-filter`,\r\n        { model }\r\n      );\r\n      if (data && sortValue.length !== 0) {\r\n        dispatch({\r\n          type: GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS,\r\n          payload: sortData(sortValue, data.data),\r\n        });\r\n      }\r\n      dispatch({\r\n        type: GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_PRODUCTS_BY_MULTY_FILTER_FAIL,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };\r\n\r\nconst sortData = (sortOption, productsData) => {\r\n  if (sortOption === \"a-z\") {\r\n    return productsData.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n  }\r\n  if (sortOption === \"z-a\") {\r\n    return productsData.sort((a, b) => (a.name < b.name ? 1 : -1));\r\n  }\r\n  if (sortOption === \"descending\") {\r\n    return productsData.sort((a, b) => (a.price > b.price ? 1 : -1));\r\n  }\r\n  if (sortOption === \"ascending\") {\r\n    return productsData.sort((a, b) => (a.price < b.price ? 1 : -1));\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}