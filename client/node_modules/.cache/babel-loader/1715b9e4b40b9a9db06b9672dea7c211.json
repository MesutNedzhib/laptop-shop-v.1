{"ast":null,"code":"var _jsxFileName = \"D:\\\\laptop-shop-v.1\\\\client\\\\src\\\\screens\\\\ProductsScreen\\\\ProductsScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Filter from \"../../components/Filter/Filter\";\nimport ProductCard from \"../../components/ProductCard/ProductCard\";\nimport \"./ProductsScreen.scss\";\nimport LoadingBox from \"../../components/LoadingBox/LoadingBox\";\nimport MessageBox from \"../../components/MessageBox/MessageBox\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport MobileFilter from \"../../components/MobileFilter/MobileFilter\";\nimport { getAllFilters, getAllProducts, sortProducts } from \"../../actions/productsActions\";\nimport { BrowserView, MobileView, isMobile } from \"react-device-detect\";\nimport MobileProductScreen from \"./MobileProductScreen/MobileProductScreen\";\nimport DesktopProductScreen from \"./DesktopProductScreen/DesktopProductScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductsScreen() {\n  _s();\n\n  const dispatch = useDispatch();\n  const productsState = useSelector(state => state.products);\n  const filtersState = useSelector(state => state.filters);\n  const [filterContentActive, setFilterContentActive] = useState(false);\n\n  const getSortValue = value => {\n    dispatch(sortProducts(value));\n    localStorage.setItem(\"sort\", value);\n  };\n\n  const clearFilterBtnHandle = () => {\n    localStorage.removeItem(\"desktop_filters\");\n    localStorage.removeItem(\"mobile_filters\");\n    dispatch(getAllProducts());\n    dispatch(getAllFilters());\n  };\n\n  const changeFilterContentActiveState = () => {\n    setFilterContentActive(!filterContentActive);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productsScreen\",\n    children: isMobile ? /*#__PURE__*/_jsxDEV(MobileProductScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(DesktopProductScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductsScreen, \"KPDEQ/CwexggQ0AkKLXWr033dCc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductsScreen;\nexport default ProductsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsScreen\");","map":{"version":3,"sources":["D:/laptop-shop-v.1/client/src/screens/ProductsScreen/ProductsScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Filter","ProductCard","LoadingBox","MessageBox","HighlightOffIcon","ArrowBackIcon","MobileFilter","getAllFilters","getAllProducts","sortProducts","BrowserView","MobileView","isMobile","MobileProductScreen","DesktopProductScreen","ProductsScreen","dispatch","productsState","state","products","filtersState","filters","filterContentActive","setFilterContentActive","getSortValue","value","localStorage","setItem","clearFilterBtnHandle","removeItem","changeFilterContentActiveState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAO,uBAAP;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,SACEC,aADF,EAEEC,cAFF,EAGEC,YAHF,QAIO,+BAJP;AAKA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,QAAlC,QAAkD,qBAAlD;AACA,OAAOC,mBAAP,MAAgC,2CAAhC;AACA,OAAOC,oBAAP,MAAiC,6CAAjC;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,aAAa,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAAjC;AACA,QAAMC,YAAY,GAAGrB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACG,OAAlB,CAAhC;AAEA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgD1B,QAAQ,CAAC,KAAD,CAA9D;;AAEA,QAAM2B,YAAY,GAAIC,KAAD,IAAW;AAC9BT,IAAAA,QAAQ,CAACP,YAAY,CAACgB,KAAD,CAAb,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,KAA7B;AACD,GAHD;;AAKA,QAAMG,oBAAoB,GAAG,MAAM;AACjCF,IAAAA,YAAY,CAACG,UAAb,CAAwB,iBAAxB;AACAH,IAAAA,YAAY,CAACG,UAAb,CAAwB,gBAAxB;AACAb,IAAAA,QAAQ,CAACR,cAAc,EAAf,CAAR;AACAQ,IAAAA,QAAQ,CAACT,aAAa,EAAd,CAAR;AACD,GALD;;AAOA,QAAMuB,8BAA8B,GAAG,MAAM;AAC3CP,IAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACGV,QAAQ,gBAAG,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA6B,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AADxC;AAAA;AAAA;AAAA;AAAA,UADF;AAoJD;;GA1KQG,c;UACUjB,W,EACKC,W,EACDA,W;;;KAHdgB,c;AA4KT,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Filter from \"../../components/Filter/Filter\";\r\nimport ProductCard from \"../../components/ProductCard/ProductCard\";\r\nimport \"./ProductsScreen.scss\";\r\nimport LoadingBox from \"../../components/LoadingBox/LoadingBox\";\r\nimport MessageBox from \"../../components/MessageBox/MessageBox\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\n\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport MobileFilter from \"../../components/MobileFilter/MobileFilter\";\r\nimport {\r\n  getAllFilters,\r\n  getAllProducts,\r\n  sortProducts,\r\n} from \"../../actions/productsActions\";\r\nimport { BrowserView, MobileView, isMobile } from \"react-device-detect\";\r\nimport MobileProductScreen from \"./MobileProductScreen/MobileProductScreen\";\r\nimport DesktopProductScreen from \"./DesktopProductScreen/DesktopProductScreen\";\r\n\r\nfunction ProductsScreen() {\r\n  const dispatch = useDispatch();\r\n  const productsState = useSelector((state) => state.products);\r\n  const filtersState = useSelector((state) => state.filters);\r\n\r\n  const [filterContentActive, setFilterContentActive] = useState(false);\r\n\r\n  const getSortValue = (value) => {\r\n    dispatch(sortProducts(value));\r\n    localStorage.setItem(\"sort\", value);\r\n  };\r\n\r\n  const clearFilterBtnHandle = () => {\r\n    localStorage.removeItem(\"desktop_filters\");\r\n    localStorage.removeItem(\"mobile_filters\");\r\n    dispatch(getAllProducts());\r\n    dispatch(getAllFilters());\r\n  };\r\n\r\n  const changeFilterContentActiveState = () => {\r\n    setFilterContentActive(!filterContentActive);\r\n  };\r\n  return (\r\n    <div className=\"productsScreen\">\r\n      {isMobile ? <MobileProductScreen /> : <DesktopProductScreen />}\r\n\r\n      {/* <div className=\"productScreen-container\">\r\n        <div className=\"productScreen-left-side\">\r\n          {localStorage.getItem(\"desktop_filters\") ? (\r\n            <div\r\n              className=\"filter-clear-btn\"\r\n              onClick={() => clearFilterBtnHandle()}\r\n            >\r\n              <HighlightOffIcon />\r\n              <span>CLEAR FILTERS</span>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {filtersState.loading ? (\r\n            <LoadingBox />\r\n          ) : filtersState.error ? (\r\n            <MessageBox message={filtersState.error} variant=\"error\" />\r\n          ) : (\r\n            <>\r\n              <Filter\r\n                show={true}\r\n                name={\"BRAND\"}\r\n                data={filtersState.filters?.data?.brand}\r\n              />\r\n              <Filter\r\n                show={true}\r\n                name={\"PROCESSOR\"}\r\n                data={filtersState.filters?.data?.processor}\r\n              />\r\n              <Filter\r\n                show={true}\r\n                name={\"MEMORY\"}\r\n                data={filtersState.filters?.data?.memory}\r\n              />\r\n              <Filter\r\n                show={true}\r\n                name={\"STORAGE\"}\r\n                data={filtersState.filters?.data?.storage}\r\n              />\r\n              <Filter\r\n                show={true}\r\n                name={\"VIDEO\"}\r\n                data={filtersState.filters?.data?.video}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"productScreen-right-side\">\r\n          <div className=\"productOptions\">\r\n            <div\r\n              onClick={() => changeFilterContentActiveState()}\r\n              className=\"productOption-filter\"\r\n            >\r\n              <h4>Filters</h4>\r\n              <span>Filters</span>\r\n            </div>\r\n            <div className=\"productOption-sort\">\r\n              <select onChange={(e) => getSortValue(e.target.value)}>\r\n                <option value=\"a-z\">A-Z</option>\r\n                <option value=\"z-a\">Z-A</option>\r\n                <option value=\"ascending\">Ascending</option>\r\n                <option value=\"descending\">Descending</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={`productOption-filter-content ${\r\n              filterContentActive ? \"f-c-active\" : \"\"\r\n            } `}\r\n          >\r\n            <div className=\"productOption-filters-container\">\r\n              <div className=\"productOption-filters-container-header\">\r\n                <h3 id=\"filters\">FILTERS</h3>\r\n                <ArrowBackIcon\r\n                  onClick={() => changeFilterContentActiveState()}\r\n                />\r\n              </div>\r\n              {isMobile ? (\r\n                <div className=\"productOption-filters-container-body\">\r\n                  {localStorage.getItem(\"mobile_filters\") ? (\r\n                    <div\r\n                      className=\"filter-clear-btn\"\r\n                      onClick={() => clearFilterBtnHandle()}\r\n                    >\r\n                      <HighlightOffIcon />\r\n                      <span>CLEAR FILTERS</span>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {filtersState.loading ? (\r\n                    <LoadingBox />\r\n                  ) : filtersState.error ? (\r\n                    <MessageBox message={filtersState.error} variant=\"error\" />\r\n                  ) : (\r\n                    <>\r\n                      <MobileFilter\r\n                        show={false}\r\n                        name={\"BRAND\"}\r\n                        data={filtersState.filters?.data?.brand}\r\n                      />\r\n                      <MobileFilter\r\n                        show={false}\r\n                        name={\"PROCESSOR\"}\r\n                        data={filtersState.filters?.data?.processor}\r\n                      />\r\n                      <MobileFilter\r\n                        show={false}\r\n                        name={\"MEMORY\"}\r\n                        data={filtersState.filters?.data?.memory}\r\n                      />\r\n                      <MobileFilter\r\n                        show={false}\r\n                        name={\"STORAGE\"}\r\n                        data={filtersState.filters?.data?.storage}\r\n                      />\r\n                      <MobileFilter\r\n                        show={false}\r\n                        name={\"VIDEO\"}\r\n                        data={filtersState.filters?.data?.video}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {productsState?.loading ? (\r\n            <LoadingBox />\r\n          ) : productsState?.error ? (\r\n            <MessageBox message={productsState?.error} variant={\"error\"} />\r\n          ) : (\r\n            <div className=\"productCards-container\">\r\n              {productsState?.products?.data?.map((item, index) => (\r\n                <ProductCard key={index} product={item} />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductsScreen;\r\n"]},"metadata":{},"sourceType":"module"}