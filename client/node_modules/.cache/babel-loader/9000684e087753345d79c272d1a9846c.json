{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ALL_FILTERS_FAIL, GET_ALL_FILTERS_REQUEST, GET_ALL_FILTERS_SUCCESS, GET_ALL_PRODUCTS_FAIL, GET_ALL_PRODUCTS_REQUEST, GET_ALL_PRODUCTS_SUCCESS, GET_PRODUCTS_BY_MULTY_FILTER_REQUEST, GET_PRODUCT_BY_ID_FAIL, GET_PRODUCT_BY_ID_REQUEST, GET_PRODUCT_BY_ID_SUCCESS, GET_PRODUCT_BY_NAME_FAIL, GET_PRODUCT_BY_NAME_REQUEST, GET_PRODUCT_BY_NAME_SUCCESS } from \"../constants/productsConstants\";\nexport const getAllProducts = () => async (dispatch, getState) => {\n  dispatch({\n    type: GET_ALL_PRODUCTS_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/products/get-all-products\");\n    dispatch({\n      type: GET_ALL_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_PRODUCTS_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const getAllFilters = () => async dispatch => {\n  dispatch({\n    type: GET_ALL_FILTERS_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/products/get-all-filters\");\n    dispatch({\n      type: GET_ALL_FILTERS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ALL_FILTERS_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const getProductById = _id => async dispatch => {\n  dispatch({\n    type: GET_PRODUCT_BY_ID_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/products/get-product-by-id\", {\n      _id\n    });\n    dispatch({\n      type: GET_PRODUCT_BY_ID_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCT_BY_ID_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const getProductByName = name => async dispatch => {\n  dispatch({\n    type: GET_PRODUCT_BY_NAME_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/products/${name}`);\n    dispatch({\n      type: GET_PRODUCT_BY_NAME_SUCCESS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCT_BY_NAME_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const getProductsByMultyFilter = (model, sortValue) => async dispatch => {\n  dispatch({\n    type: GET_PRODUCTS_BY_MULTY_FILTER_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post(`/api/products/multyfilter`, {\n      model\n    });\n\n    if (data && sortValue.length !== 0) {\n      dispatch({\n        type: GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS,\n        payload: sortData(sortValue, data.data)\n      });\n    }\n\n    dispatch({\n      type: GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_BY_MULTY_FILTER_FAIL,\n      payload: err.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/laptop-shop-v.1/client/src/actions/productsActions.js"],"names":["axios","GET_ALL_FILTERS_FAIL","GET_ALL_FILTERS_REQUEST","GET_ALL_FILTERS_SUCCESS","GET_ALL_PRODUCTS_FAIL","GET_ALL_PRODUCTS_REQUEST","GET_ALL_PRODUCTS_SUCCESS","GET_PRODUCTS_BY_MULTY_FILTER_REQUEST","GET_PRODUCT_BY_ID_FAIL","GET_PRODUCT_BY_ID_REQUEST","GET_PRODUCT_BY_ID_SUCCESS","GET_PRODUCT_BY_NAME_FAIL","GET_PRODUCT_BY_NAME_REQUEST","GET_PRODUCT_BY_NAME_SUCCESS","getAllProducts","dispatch","getState","type","data","get","payload","err","message","getAllFilters","getProductById","_id","post","getProductByName","name","getProductsByMultyFilter","model","sortValue","length","GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS","sortData","GET_PRODUCTS_BY_MULTY_FILTER_FAIL"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_ALL_FILTERS_FAIL,\r\n  GET_ALL_FILTERS_REQUEST,\r\n  GET_ALL_FILTERS_SUCCESS,\r\n  GET_ALL_PRODUCTS_FAIL,\r\n  GET_ALL_PRODUCTS_REQUEST,\r\n  GET_ALL_PRODUCTS_SUCCESS,\r\n  GET_PRODUCTS_BY_MULTY_FILTER_REQUEST,\r\n  GET_PRODUCT_BY_ID_FAIL,\r\n  GET_PRODUCT_BY_ID_REQUEST,\r\n  GET_PRODUCT_BY_ID_SUCCESS,\r\n  GET_PRODUCT_BY_NAME_FAIL,\r\n  GET_PRODUCT_BY_NAME_REQUEST,\r\n  GET_PRODUCT_BY_NAME_SUCCESS,\r\n} from \"../constants/productsConstants\";\r\n\r\nexport const getAllProducts = () => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: GET_ALL_PRODUCTS_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await axios.get(\"/api/products/get-all-products\");\r\n    dispatch({\r\n      type: GET_ALL_PRODUCTS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ALL_PRODUCTS_FAIL,\r\n      payload: err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllFilters = () => async (dispatch) => {\r\n  dispatch({\r\n    type: GET_ALL_FILTERS_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await axios.get(\"/api/products/get-all-filters\");\r\n    dispatch({\r\n      type: GET_ALL_FILTERS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ALL_FILTERS_FAIL,\r\n      payload: err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductById = (_id) => async (dispatch) => {\r\n  dispatch({\r\n    type: GET_PRODUCT_BY_ID_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await axios.post(\"/api/products/get-product-by-id\", {\r\n      _id,\r\n    });\r\n    dispatch({\r\n      type: GET_PRODUCT_BY_ID_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_PRODUCT_BY_ID_FAIL,\r\n      payload: err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductByName = (name) => async (dispatch) => {\r\n  dispatch({\r\n    type: GET_PRODUCT_BY_NAME_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await axios.get(`/api/products/${name}`);\r\n    dispatch({\r\n      type: GET_PRODUCT_BY_NAME_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_PRODUCT_BY_NAME_FAIL,\r\n      payload: err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductsByMultyFilter =\r\n  (model, sortValue) => async (dispatch) => {\r\n    dispatch({\r\n      type: GET_PRODUCTS_BY_MULTY_FILTER_REQUEST,\r\n    });\r\n    try {\r\n      const { data } = await axios.post(`/api/products/multyfilter`, { model });\r\n      if (data && sortValue.length !== 0) {\r\n        dispatch({\r\n          type: GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS,\r\n          payload: sortData(sortValue, data.data),\r\n        });\r\n      }\r\n      dispatch({\r\n        type: GET_PRODUCTS_BY_MULTY_FILTER_SUCCESS,\r\n        payload: data.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_PRODUCTS_BY_MULTY_FILTER_FAIL,\r\n        payload: err.message,\r\n      });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}